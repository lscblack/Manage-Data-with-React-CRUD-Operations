"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const jwt_error_1 = require("./jwt-error");
class JwtToken {
    constructor(config) {
        this.token = '';
        this.decoded = {};
        if (config.token !== undefined) {
            this.token = config.token;
        }
        else {
            this.create(config);
        }
        this.verify(config.secret);
    }
    create(createTokenOption) {
        const { payload, secret, expire } = createTokenOption;
        this.token = jsonwebtoken_1.default.sign({ payload }, secret, {
            expiresIn: expire,
        });
    }
    verify(secret) {
        try {
            this.decoded = jsonwebtoken_1.default.verify(this.token, secret);
        }
        catch (err) {
            if (err.name === 'TokenExpiredError') {
                throw new jwt_error_1.JwtError(jwt_error_1.JwtError.ERROR.EXPIRED_JWT);
            }
            else {
                throw new jwt_error_1.JwtError(jwt_error_1.JwtError.ERROR.INVALID_JWT);
            }
        }
    }
}
exports.JwtToken = JwtToken;
