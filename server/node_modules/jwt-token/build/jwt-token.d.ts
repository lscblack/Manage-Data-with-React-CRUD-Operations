export interface Decoded<T> {
    payload: T;
    exp: number;
    iat: number;
}
export interface TokenOption<T> {
    secret: string;
    expire: string;
}
export interface DecodeTokenOption {
    token: string;
    secret: string;
}
export interface CreateTokenOption<T> extends TokenOption<T> {
    payload: T;
}
export declare class JwtToken<T> {
    token: string;
    decoded: Decoded<T>;
    constructor(config: DecodeTokenOption | CreateTokenOption<T>);
    create(createTokenOption: CreateTokenOption<T>): void;
    verify(secret: string): void;
}
